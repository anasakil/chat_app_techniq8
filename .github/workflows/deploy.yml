name: Deploy Backend to Production

on:
  push:
    branches: [ main ]  # ou master, selon votre branche principale

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "mkdir -p ${{ secrets.SERVER_PATH }}"
          rsync -avz --exclude='.git' --exclude='node_modules' ./ ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}/
          
      - name: Setup environment file
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.SERVER_PATH }} && \
          echo 'PORT=4400
          MONGODB_URI=mongodb+srv://anasakil:Anas%402002@atlascluster.tdrqxg2.mongodb.net/?retryWrites=true&w=majority&appName=AtlasCluster
          MONGODB_DB_NAME=chat
          JWT_SECRET=your_jwt_secret_key_here
          TURN_USERNAME=your_turn_username
          TURN_PASSWORD=your_turn_password
          ENCRYPTION_KEY=erf34533F
          ENCRYPTION_SALT=3
          SOCKET_ENCRYPTION_SECRET=your_socket_encryption_key_here
          NODE_ENV=production
          SOCKET_PORT=4400
          UPLOAD_DIRECTORY=./uploads
          DEBUG=app:*
          REGISTRATION_KEYS=1234567890,2345678901,3456789012,4567890123,5678901234,6789012345,7890123456,8901234567,9012345678,0123456789' > .env"

      - name: Build and start Docker containers
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.SERVER_PATH }} && \
          docker-compose down || true && \
          docker-compose build --no-cache && \
          docker-compose up -d"

      - name: Verify deployment
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "docker ps | grep chat-backend"